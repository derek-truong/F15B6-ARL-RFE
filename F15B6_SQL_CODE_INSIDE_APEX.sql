-- Grabs Global Employee ID
Select emp_id from F15B6_Emp where ename = :EMPLOYEE_NAME;

-- Type global variable checks to see if is higher level emp
select emp_id
 from F15B6_Emp
where (admin_flag = 'Y' or lab_dir_flag = 'Y' or chair_flag = 'Y' or exec_flag = 'Y') and emp_id = :EMPLOYEE_ID;

-- Login Page Info for Select List
select F15B6_LAB.LAB_NAME as LAB_NAME ,
F15B6_LAB.LAB_ID as LAB_ID    
 from F15B6_LAB F15B6_LAB;

 select F15B6_EMP_VIEW.ENAME as ENAME,
F15B6_EMP_VIEW.ENAME as EMP_ID 
 from F15B6_EMP_VIEW F15B6_EMP_VIEW
WHERE :LAB = F15B6_EMP_VIEW.EMP_LAB AND F15B6_EMP_VIEW.EMP_STATUS = 'A';

-- Displays all the people in the system
select "EMP_ID", 
"ENAME",
"EMP_LAB",
"EMP_EMAIL",
"EMP_OFFICE",
"EMP_PHONE",
"STATUS_EFF_DATE"
from "#OWNER#"."F15B6_EMP_VIEW" ;
  
-- ALL RFE DISPLAYS
select RFE_ID,
       F15B6_EMP_EMP_ID,
       RFE_STAT,
       EXPLANATION,
       ALT_PROTECTIONS,
       APPROVAL_DATE
  from F15B6_RFE, F15B6_STATUS
WHERE STATUS_ID = F15B6_STATUS_STATUS_ID;

select RFE_ID,
       F15B6_EMP_EMP_ID,
       RFE_STAT,
       EXPLANATION,
       ALT_PROTECTIONS,
       APPROVAL_DATE
  from F15B6_RFE, F15B6_STATUS
WHERE STATUS_ID = F15B6_STATUS_STATUS_ID AND SYSDATE <= (APPROVAL_DATE +35) AND SYSDATE > APPROVAL_DATE;

select RFE_ID,
       F15B6_EMP_EMP_ID,
       RFE_STAT,
       EXPLANATION,
       ALT_PROTECTIONS,
       APPROVAL_DATE
  from F15B6_RFE, F15B6_STATUS
WHERE STATUS_ID = F15B6_STATUS_STATUS_ID AND (SYSDATE >= APPROVAL_DATE -35 AND SYSDATE < APPROVAL_DATE);

--displays all active employees
select EMP_ID,
       ENAME,
       EMP_LAB,
       EMP_EMAIL,
       EMP_OFFICE,
       EMP_PHONE,
       EMP_STATUS,
       STATUS_EFF_DATE
  from F15B6_EMP_VIEW where EMP_STATUS = 'A';

--displays all the lab info
select "LAB_ID", 
"LAB_NAME"
from "#OWNER#"."F15B6_LAB" ;
  
-- DISPLAYS MORE RFE INFO 
SELECT EMP_ID FROM F15B6_EMP
WHERE EMP_LAB = :LAB_ID AND EMP_ID = :EMPLOYEE_ID AND (ADMIN_FLAG = 'N' AND CHAIR_FLAG = 'N' AND LAB_DIR_FLAG = 'N' AND EXEC_FLAG = 'N');

SELECT EMP_ID FROM F15B6_EMP
WHERE EMP_LAB = :LAB_ID AND EMP_ID = :EMPLOYEE_ID AND ADMIN_FLAG = 'N' AND CHAIR_FLAG = 'N' AND LAB_DIR_FLAG = 'N' AND EXEC_FLAG = 'N';

SELECT EMP_ID FROM F15B6_EMP
WHERE EMP_LAB = :LAB_ID AND EMP_ID = :EMPLOYEE_ID AND ADMIN_FLAG = 'Y';

SELECT EMP_ID FROM F15B6_EMP
WHERE EMP_LAB = :LAB_ID AND EMP_ID = :EMPLOYEE_ID AND ADMIN_FLAG = 'Y';

select DISTINCT r.RFE_ID as RFE_ID,
r.RFE_ID as RFE_ID2 from F15B6_RFE r JOIN F15B6_EMP e ON r.F15B6_EMP_EMP_ID = e.emp_id  where e.EMP_LAB = :LAB_ID; 

SELECT EMP_ID FROM F15B6_EMP
WHERE EMP_LAB = :LAB_ID AND EMP_ID = :EMPLOYEE_ID AND ADMIN_FLAG = 'Y';

SELECT EMP_ID FROM F15B6_EMP
WHERE EMP_LAB = :LAB_ID AND EMP_ID = :EMPLOYEE_ID AND LAB_DIR_FLAG = 'Y';

SELECT EMP_ID FROM F15B6_EMP
WHERE EMP_LAB = :LAB_ID AND EMP_ID = :EMPLOYEE_ID AND LAB_DIR_FLAG = 'Y';

select DISTINCT F15B6_RFE.RFE_ID as RFE_ID,
F15B6_RFE.RFE_ID as RFE_ID2 from F15B6_RFE, F15B6_EMP  where F15B6_EMP.EMP_LAB = :LAB_ID ;

select 
RFE_ID,
EXPLANATION,
ALT_PROTECTIONS,
APPROVAL_DATE
from (SELECT * FROM F15B6_RFE 
      JOIN (SELECT EMP_ID FROM F15B6_EMP where EMP_LAB = :LAB_ID) on F15B6_EMP_EMP_ID = EMP_ID);

select 
RFE_ID,
EXPLANATION,
ALT_PROTECTIONS,
APPROVAL_DATE
from (SELECT * FROM F15B6_RFE 
      JOIN (SELECT EMP_ID FROM F15B6_EMP, F15B6_LAB where F15B6_LAB.LAB_ID = :LAB_ID) on F15B6_EMP_EMP_ID = EMP_ID WHERE F15B6_STATUS_STATUS_ID = 7);

SELECT EMP_ID FROM F15B6_EMP
WHERE EMP_ID = :EMPLOYEE_ID AND CHAIR_FLAG = 'Y';

select F15B6_RFE.RFE_ID as RFE_ID,
F15B6_RFE.RFE_ID as RFE_ID2 from F15B6_RFE;

select 
RFE_ID,
EXPLANATION,
ALT_PROTECTIONS,
APPROVAL_DATE
from F15B6_RFE;

select 
RFE_ID,
EXPLANATION,
ALT_PROTECTIONS,
APPROVAL_DATE
from (SELECT * FROM F15B6_RFE 
      JOIN (SELECT EMP_ID FROM F15B6_EMP, F15B6_LAB where F15B6_LAB.LAB_ID = :LAB_ID) on F15B6_EMP_EMP_ID = EMP_ID WHERE F15B6_STATUS_STATUS_ID = 8);

SELECT EMP_ID FROM F15B6_EMP
WHERE EMP_LAB = :LAB_ID AND EMP_ID = :EMPLOYEE_ID AND EXEC_FLAG = 'Y';

select DISTINCT F15B6_RFE.RFE_ID as RFE_ID,
F15B6_RFE.RFE_ID as RFE_ID2 from F15B6_RFE;

select 
RFE_ID,
EXPLANATION,
ALT_PROTECTIONS,
APPROVAL_DATE
from (SELECT * FROM F15B6_RFE 
      JOIN (SELECT EMP_ID FROM F15B6_EMP where EMP_LAB = :LAB_ID) on F15B6_EMP_EMP_ID = EMP_ID);

  SELECT EMP_ID FROM F15B6_EMP
WHERE EMP_LAB = :LAB_ID AND EMP_ID = :EMPLOYEE_ID AND EXEC_FLAG = 'Y';

 SELECT RFE_ID, EXPLANATION, ALT_PROTECTIONS, APPROVAL_DATE, RFE_STAT 
FROM F15B6_RFE r JOIN RFE_CONTACT c ON r.F15B6_EMP_EMP_ID = c.F15B6_EMP_EMP_ID
JOIN F15B6_STATUS ON F15B6_STATUS_STATUS_ID = STATUS_ID
WHERE r.F15B6_EMP_EMP_ID = :EMPLOYEE_ID AND
c.F15B6_RFE_RFE_ID = r.RFE_ID;

-- ROLE CODES
select "ROLE_ID", "ROLE_TYPE",
"DESCRIPTION"
from "#OWNER#"."F15B6_ROLES"; 
  
-- STATUS CODES
select "STATUS_ID", 
"RFE_STAT",
"DESCRIPTION",
"ENTERED_BY"
from "#OWNER#"."F15B6_STATUS";
  
-- MORE MORE RFE INFO
SELECT RFE_ID, EXPLANATION, ALT_PROTECTIONS, APPROVAL_DATE, RFE_STAT
FROM F15B6_RFE, F15B6_STATUS
WHERE RFE_ID = :CURRENT_RFE_ID AND F15B6_STATUS_STATUS_ID = status_id;

SElECT EMP_ID FROM F15B6_EMP, F15B6_RFE WHERE F15B6_EMP_EMP_ID = :EMPLOYEE_ID;

SELECT ENAME FROM F15B6_EMP WHERE EMP_LAB = :LAB_ID AND ADMIN_FLAG = 'Y';

SELECT ENAME FROM F15B6_EMP WHERE EMP_LAB = :LAB_ID AND LAB_DIR_FLAG = 'Y';

SELECT ENAME FROM F15B6_EMP WHERE CHAIR_FLAG = 'Y';

SELECT ENAME FROM F15B6_EMP WHERE EXEC_FLAG = 'Y';

select
  F15B6_TASK.TASK_ID as TASK_ID,
  F15B6_TASK.EFF_DATE as EFF_DATE,
  F15B6_TASK.TASK_ABB as TASK_ABB,
  F15B6_TASK.TASK_DESC as TASK_DESC 

from F15B6_TASK, RFE_TASK
WHERE RFE_TASK.F15B6_RFE_RFE_ID = :CURRENT_RFE_ID AND RFE_TASK.F15B6_TASK_TASK_ID = F15B6_TASK.TASK_ID;

Select DISTINCT TASK_ABB, TASK_ID FROM F15B6_TASK WHERE TASK_ID IN (SELECT F15B6_TASK_TASK_ID FROM RFE_TASK WHERE F15B6_RFE_RFE_ID = :CURRENT_RFE_ID);

SELECT DISTINCT TASK_ABB, TASK_ID FROM F15B6_TASK, F15B6_RFE
WHERE TASK_ID NOT IN (SELECT F15B6_TASK_TASK_ID FROM RFE_TASK WHERE F15B6_RFE_RFE_ID = :CURRENT_RFE_ID);

SELECT DISTINCT COM_ID, "comment", ENTRY_DATE, c.F15B6_EMP_EMP_ID 
FROM F15B6_COM c 
JOIN F15B6_RFE r ON c.F15B6_RFE_RFE_ID = :CURRENT_RFE_ID
JOIN F15B6_STATUS ON r.F15B6_STATUS_STATUS_ID = STATUS_ID
ORDER BY ENTRY_DATE DESC;

SELECT HIST_ID, EFFECTIVE_DATE, STAT_CODE, ENAME AS Status_Updated_By 
FROM F15B6_HIST 
join F15B6_EMP on EMP_ID = BY_EMP
WHERE F15B6_RFE_RFE_ID = :CURRENT_RFE_ID 

ORDER BY EFFECTIVE_DATE DESC

Select F15B6_EMP_EMP_ID as EMP_ID, F15B6_EMP.ENAME as CONTACT_NAME FROM RFE_CONTACT, F15B6_EMP WHERE F15B6_RFE_RFE_ID = :CURRENT_RFE_ID AND F15B6_EMP_EMP_ID = F15B6_EMP.EMP_ID;

Select DISTINCT EMP_ID as ENAME, EMP_ID FROM F15B6_EMP, RFE_CONTACT 
WHERE EMP_ID IN (SELECT F15B6_EMP_EMP_ID FROM RFE_CONTACT) AND EXEC_FLAG <> 'Y' AND CHAIR_FLAG <> 'Y' AND ADMIN_FLAG <> 'Y' AND LAB_DIR_FLAG <> 'Y' ;

Select DISTINCT ENAME, EMP_ID FROM F15B6_EMP, RFE_CONTACT 
WHERE EMP_ID NOT IN (SELECT F15B6_EMP_EMP_ID FROM RFE_CONTACT) AND EXEC_FLAG <> 'Y' AND CHAIR_FLAG <> 'Y' AND ADMIN_FLAG <> 'Y' AND LAB_DIR_FLAG <> 'Y' AND EMP_ID <> :EMPLOYEE_ID;

BEGIN
INSERT INTO F15B6_HIST(EFFECTIVE_DATE, STAT_CODE, BY_EMP, F15B6_RFE_RFE_ID, F15B6_STATUS_STATUS_ID)
VALUES(SYSDATE, 'Submitted', :EMPLOYEE_ID, :CURRENT_RFE_ID, 2);

UPDATE F15B6_RFE 
SET F15B6_STATUS_STATUS_ID = 2 WHERE RFE_ID = :CURRENT_RFE_ID;

INSERT INTO
F15B6_COM(F15B6_RFE_RFE_ID, F15B6_EMP_EMP_ID, F15B6_COM."comment", ENTRY_DATE)
VALUES (:CURRENT_RFE_ID, :EMPLOYEE_ID, 'The RFE has been submitted to the Lab System Administrator for approval.', SYSDATE);

END;

BEGIN
INSERT INTO F15B6_HIST(EFFECTIVE_DATE, STAT_CODE, BY_EMP, F15B6_RFE_RFE_ID)
VALUES(SYSDATE, 'Recalled', :EMPLOYEE_ID, :CURRENT_RFE_ID);

UPDATE F15B6_RFE SET F15B6_STATUS_STATUS_ID = 4 WHERE RFE_ID = :CURRENT_RFE_ID;

UPDATE F15B6_HIST
SET F15B6_STATUS_STATUS_ID = 4
WHERE F15B6_RFE_RFE_ID = :CURRENT_RFE_ID;

INSERT INTO
F15B6_COM(F15B6_RFE_RFE_ID, F15B6_EMP_EMP_ID, F15B6_COM."comment", ENTRY_DATE)
VALUES (:CURRENT_RFE_ID, :EMPLOYEE_ID, 'The requestor has recalled an RFE that has not yet reached final approval. Once Submitted again, it will follow the same routing as an Entered RFE.', SYSDATE);
END;

DECLARE
eid NUMBER;
BEGIN
SELECT emp_id into eid from F15B6_EMP where ename = :EMPLOYEE_NAME;
INSERT INTO F15B6_HIST(EFFECTIVE_DATE, STAT_CODE, BY_EMP, F15B6_RFE_RFE_ID)
VALUES(SYSDATE, 'Returned', eid, :CURRENT_RFE_ID);

UPDATE F15B6_RFE SET F15B6_STATUS_STATUS_ID = 3 WHERE RFE_ID = :CURRENT_RFE_ID;

UPDATE F15B6_HIST
SET F15B6_STATUS_STATUS_ID = 3
WHERE F15B6_RFE_RFE_ID = :CURRENT_RFE_ID;

INSERT INTO
F15B6_COM(F15B6_RFE_RFE_ID, F15B6_EMP_EMP_ID, F15B6_COM."comment", ENTRY_DATE)
VALUES (:CURRENT_RFE_ID, eid, 'The RFE has been returned for further information or clarification. Once Submitted again, it will follow the same routing as an Entered RFE.', SYSDATE);

END;

DECLARE
status NUMBER;
e_id NUMBER;

BEGIN

SELECT F15B6_STATUS_STATUS_ID into status FROM F15B6_RFE WHERE RFE_ID = :CURRENT_RFE_ID;
SELECT EMP_ID into e_id FROM F15B6_EMP WHERE ename = :EMPLOYEE_NAME;
IF(status = 2)THEN
    INSERT INTO F15B6_HIST(EFFECTIVE_DATE, STAT_CODE, BY_EMP, F15B6_RFE_RFE_ID)
    VALUES(SYSDATE, 'SA Approved', e_id, :CURRENT_RFE_ID);
    
    UPDATE F15B6_RFE SET F15B6_STATUS_STATUS_ID = 6 WHERE RFE_ID = :CURRENT_RFE_ID;
    
    UPDATE F15B6_HIST SET F15B6_STATUS_STATUS_ID = 6 WHERE F15B6_RFE_RFE_ID = :CURRENT_RFE_ID;
    
    INSERT INTO F15B6_COM(F15B6_RFE_RFE_ID, F15B6_EMP_EMP_ID, F15B6_COM."comment", ENTRY_DATE)
    VALUES (:CURRENT_RFE_ID, e_id, 'The Lab System Administrator has approved the RFE; it has been submitted for Lab Director approval.', SYSDATE);
END IF;

END;

DECLARE
status NUMBER;
e_id NUMBER;

BEGIN

SELECT F15B6_STATUS_STATUS_ID into status FROM F15B6_RFE WHERE RFE_ID = :CURRENT_RFE_ID;
SELECT EMP_ID into e_id FROM F15B6_EMP WHERE ename = :EMPLOYEE_NAME;
IF(status = 6)THEN
    INSERT INTO F15B6_HIST(EFFECTIVE_DATE, STAT_CODE, BY_EMP, F15B6_RFE_RFE_ID)
    VALUES(SYSDATE, 'LD Approval', e_id, :CURRENT_RFE_ID);
    
    UPDATE F15B6_RFE SET F15B6_STATUS_STATUS_ID = 7 WHERE RFE_ID = :CURRENT_RFE_ID;
    
    UPDATE F15B6_HIST SET F15B6_STATUS_STATUS_ID = 7 WHERE F15B6_RFE_RFE_ID = :CURRENT_RFE_ID;
    
    INSERT INTO F15B6_COM(F15B6_RFE_RFE_ID, F15B6_EMP_EMP_ID, F15B6_COM."comment", ENTRY_DATE)
    VALUES (:CURRENT_RFE_ID, e_id, 'The Lab Director has approved the RFE; it has been submitted for Network Security Panel approval.', SYSDATE);
END IF;

END;

DECLARE
status NUMBER;
e_id NUMBER;

BEGIN

SELECT F15B6_STATUS_STATUS_ID into status FROM F15B6_RFE WHERE RFE_ID = :CURRENT_RFE_ID;
SELECT EMP_ID into e_id FROM F15B6_EMP WHERE ename = :EMPLOYEE_NAME;

UPDATE F15B6_RFE
SET F15B6_RFE.APPROVAL_DATE = SYSDATE + 35
WHERE RFE_ID = :CURRENT_RFE_ID;

IF(status = 8)THEN
    INSERT INTO F15B6_HIST(EFFECTIVE_DATE, STAT_CODE, BY_EMP, F15B6_RFE_RFE_ID)
    VALUES(SYSDATE, 'Final Approved', e_id, :CURRENT_RFE_ID);
    
    UPDATE F15B6_RFE SET F15B6_STATUS_STATUS_ID = 9 WHERE RFE_ID = :CURRENT_RFE_ID;
    
    UPDATE F15B6_HIST SET F15B6_STATUS_STATUS_ID = 9 WHERE F15B6_RFE_RFE_ID = :CURRENT_RFE_ID;
    
    INSERT INTO F15B6_COM(F15B6_RFE_RFE_ID, F15B6_EMP_EMP_ID, F15B6_COM."comment", ENTRY_DATE)
    VALUES (:CURRENT_RFE_ID, e_id, 'The Executive Director''s Office has given final approval for the RFE and it may be implemented.', SYSDATE);
END IF;

END;

DECLARE
status NUMBER;
e_id NUMBER;

BEGIN

SELECT F15B6_STATUS_STATUS_ID into status FROM F15B6_RFE WHERE RFE_ID = :CURRENT_RFE_ID;
SELECT EMP_ID into e_id FROM F15B6_EMP WHERE ename = :EMPLOYEE_NAME;
IF(status = 7)THEN
    INSERT INTO F15B6_HIST(EFFECTIVE_DATE, STAT_CODE, BY_EMP, F15B6_RFE_RFE_ID)
    VALUES(SYSDATE, 'CH Approval', e_id, :CURRENT_RFE_ID);
    
    UPDATE F15B6_RFE SET F15B6_STATUS_STATUS_ID = 8 WHERE RFE_ID = :CURRENT_RFE_ID;
    
    UPDATE F15B6_HIST SET F15B6_STATUS_STATUS_ID = 8 WHERE F15B6_RFE_RFE_ID = :CURRENT_RFE_ID;
    
    INSERT INTO F15B6_COM(F15B6_RFE_RFE_ID, F15B6_EMP_EMP_ID, F15B6_COM."comment", ENTRY_DATE)
    VALUES (:CURRENT_RFE_ID, e_id, 'The Chairperson has approved the RFE; it has been submitted to the Executive Director for approval.', SYSDATE);
END IF;

END;

DECLARE
eid NUMBER;

BEGIN
SELECT emp_id into eid from F15B6_EMP where ename = :EMPLOYEE_NAME;
INSERT INTO F15B6_HIST(EFFECTIVE_DATE, STAT_CODE, BY_EMP, F15B6_RFE_RFE_ID)
VALUES(SYSDATE, 'Rejected', eid, :CURRENT_RFE_ID);

UPDATE F15B6_RFE SET F15B6_STATUS_STATUS_ID = 5 WHERE RFE_ID = :CURRENT_RFE_ID;

UPDATE F15B6_HIST SET F15B6_STATUS_STATUS_ID = 5 WHERE F15B6_RFE_RFE_ID = :CURRENT_RFE_ID;

INSERT INTO
F15B6_COM(F15B6_RFE_RFE_ID, F15B6_EMP_EMP_ID, F15B6_COM."comment", ENTRY_DATE)
VALUES (:CURRENT_RFE_ID, eid, 'The RFE has been rejected and cannot be implemented.', SYSDATE);
END;

BEGIN
INSERT INTO F15B6_RFE(F15B6_EMP_EMP_ID,
                      F15B6_STATUS_STATUS_ID, F15B6_TASK_TASK_ID, 
                      EXPLANATION, ALT_PROTECTIONS, APPROVAL_DATE)
VALUES((select F15B6_EMP_EMP_ID from F15B6_RFE where RFE_ID = :CURRENT_RFE_ID),
       1,
       (select F15B6_TASK_TASK_ID from F15B6_RFE where RFE_ID = :CURRENT_RFE_ID),
       (select EXPLANATION from F15B6_RFE where RFE_ID = :CURRENT_RFE_ID),
       (select ALT_PROTECTIONS from F15B6_RFE where RFE_ID = :CURRENT_RFE_ID),
       (select APPROVAL_DATE from F15B6_RFE where RFE_ID = :CURRENT_RFE_ID)
       );
END;

DECLARE 
RID NUMBER;
BEGIN
SELECT RFE_ID INTO RID FROM F15B6_RFE WHERE RFE_ID = :CURRENT_RFE_ID;

INSERT INTO RFE_TASK(F15B6_RFE_RFE_ID, F15B6_TASK_TASK_ID) 
VALUES(RID, :P26_TASK);
END;

DELETE FROM RFE_CONTACT
WHERE F15B6_EMP_EMP_ID = :P26_CONTACT_DELETION AND F15B6_RFE_RFE_ID = :CURRENT_RFE_ID;

DELETE FROM RFE_TASK
WHERE F15B6_TASK_TASK_ID = :P26_TASK_DELETION AND F15B6_RFE_RFE_ID = :CURRENT_RFE_ID;

select "TASK_ID", 
"EFF_DATE",
"TASK_ABB",
"TASK_DESC"
from "#OWNER#"."F15B6_TASK"

select "DOC_ID", 
"FILENAME",
"FILE_MIMETYPE",
"FILE_CHARSET",
dbms_lob.getlength("FILE_BLOB") "FILE_BLOB",
"FILE_COMMENTS",
"TAGS"
from "#OWNER#"."F15B6_DOC"
WHERE F15B6_RFE_RFE_ID = :CURRENT_RFE_ID;

-- Authentication
select "AUTH_ID", 
"RIGHT"
from "#OWNER#"."F15B6_AUTH"; 
  
select "RFE_ID", 
F15B6_EMP_EMP_ID AS EMPLOYEE_ID,
"F15B6_STATUS_STATUS_ID" AS STATUS_CODE,
"EXPLANATION",
"ALT_PROTECTIONS",
"APPROVAL_DATE"
from "#OWNER#"."F15B6_RFE"; 

select RFE_ID,
       F15B6_EMP_EMP_ID AS EMPLOYEE_ID,
       F15B6_STATUS_STATUS_ID AS STATUS_CODE,
       EXPLANATION,
       ALT_PROTECTIONS,
       APPROVAL_DATE
  from F15B6_RFE;